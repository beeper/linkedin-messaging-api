name: Python

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ master ]
  release:
    types:
      - created

jobs:
  lint:
    name: Run linters
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.9 ]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Run image
      uses: abatilo/actions-poetry@v2.1.2

    - name: Install dependencies
      run: |
        poetry install

    - name: Run lint with black
      run: |
        poetry run black --check .

    - name: Lint with flake8
      if: always()
      run: |
        poetry run flake8 --count --statistics

    - name: Lint with mypy
      if: always()
      run: |
        poetry run mypy .

    - name: Run custom style checks
      if: always()
      run: |
        poetry run cicd/custom_style_check.py

  test:
    name: Run the tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.9 ]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Run image
      uses: abatilo/actions-poetry@v2.1.2
    - name: Install dependencies
      run: |
        poetry install
    - name: Run pytest
      run: |
        poetry run pytest -vv
        poetry run pytest -vv > pytest-coverage.txt
    - name: Comment coverage
      uses: coroo/pytest-coverage-commentator@v1.0.2
      if: ${{ matrix.python-version == '3.9' && github.event_name == 'pull_request' && github.event.action == 'created' }}

  build:
    name: Build linkedin_messaging
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.9 ]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Run image
      uses: abatilo/actions-poetry@v2.1.2
    - name: Run build
      run: |
        poetry build

  test_deploy:
    name: Test Deploy to PyPi
    runs-on: ubuntu-latest
    needs: [lint, test, build]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Run image
      uses: abatilo/actions-poetry@v2.1.2

    - name: Run build
      run: |
        poetry build

    - name: Dry run publish
      run: |
        poetry config pypi-token.pypi ${{ secrets.PYPI_DEPLOY_TOKEN }}
        poetry publish --dry-run

  deploy:
    name: Deploy to PyPi
    runs-on: ubuntu-latest
    needs: [test_deploy]
    if: ${{ github.event_name == 'release' && github.event.action == 'created' }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Run image
      uses: abatilo/actions-poetry@v2.1.2

    - name: Run build
      run: |
        poetry build

    - name: Actual publish
      run: |
        poetry config pypi-token.pypi ${{ secrets.PYPI_DEPLOY_TOKEN }}
        poetry publish
